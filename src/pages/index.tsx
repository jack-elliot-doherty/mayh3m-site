import { type NextPage } from "next";
import Head from "next/head";
import { signIn, signOut, useSession } from "next-auth/react";
import { useForm, SubmitHandler } from "react-hook-form";

import { api } from "../utils/api";

type Inputs = {
  name: string;
  email: string;
  why: string;
};

const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });

  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<Inputs>();

  const onSubmit: SubmitHandler<Inputs> = (data) => {
    console.log(data);
  };

  return (
    <>
      <Head>
        <title>Mayh3m</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center font-sans font-semibold">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <img src="logo.png"></img>
          <div className="text-center">
            <p>Congratulations</p>
            <p>Welcome to Mayh<span className="text-red-600">3</span>m Clothing</p>
            <p>By F<span className="text-red-600">3</span>Z</p>
          </div>
          <div className="text-center">

            <h3>Apply today for our first drop and be 1 of 100</h3>

            <form onSubmit={handleSubmit(onSubmit)}>
              <div className="form-control">
                <label>Name</label>
                <input type="text" {...register("name")} />
              </div>
              <div className="form-control">
                <label>Email</label>
                <input type="text" {...register("email")} />
              </div>
              <div className="form-control">
                <label>Why you?</label>
                <textarea {...register("why")} />
              </div>
              <div className="form-control">
                <label></label>
                <button type="submit">Apply</button>
              </div>
            </form>

          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => signOut() : () => signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
